---
name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # Run at 01:10 on Sunday
    - cron: "10 1 * * 0"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - armhfp
          - arm64
          - amd64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Build the image with Buildah
        run: ./gcc-arm-none-eabi-ssh-image.sh -a ${{ matrix.arch }}

      - name: Tag the image for Fedora 34
        run: podman tag localhost/gcc-arm-none-eabi-ssh localhost/gcc-arm-none-eabi-ssh:34

      - name: Export the image
        run: podman image save --format oci-archive -o gcc-arm-none-eabi-ssh-${{ matrix.arch }}.tar localhost/gcc-arm-none-eabi-ssh

      - uses: actions/upload-artifact@v2
        with:
          name: gcc-arm-none-eabi-ssh-${{ matrix.arch }}
          path: gcc-arm-none-eabi-ssh-${{ matrix.arch }}.tar

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        arch:
          - armhfp
          - arm64
          - amd64
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: gcc-arm-none-eabi-ssh-${{ matrix.arch }}

      - name: Load the image
        run: podman image load -i gcc-arm-none-eabi-ssh-${{ matrix.arch }}.tar

      - name: Run the image and verify the GNU ARM embedded toolchain is available inside the container
        run: podman run --rm --volume "$PWD":/home/user:Z --name test-container -d localhost/gcc-arm-none-eabi-ssh arm-none-eabi-g++ test/main.cpp

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Create a manifest
        run: buildah manifest create gcc-arm-none-eabi-ssh-multiarch:latest

      # armhfp
      - uses: actions/download-artifact@v2
        with:
          name: gcc-arm-none-eabi-ssh-armhfp

      - name: Load the armhfp image
        run: podman image load -i gcc-arm-none-eabi-ssh-armhfp.tar

      - name: Add the armhfp image to the manifest
        run: buildah manifest add gcc-arm-none-eabi-ssh-multiarch:latest localhost/gcc-arm-none-eabi-ssh

      # aarch64
      - uses: actions/download-artifact@v2
        with:
          name: gcc-arm-none-eabi-ssh-arm64

      - name: Load the arm64 image
        run: podman image load -i gcc-arm-none-eabi-ssh-arm64.tar

      - name: Add the arm64 image to the manifest
        run: buildah manifest add gcc-arm-none-eabi-ssh-multiarch:latest localhost/gcc-arm-none-eabi-ssh

      # x86_64
      - uses: actions/download-artifact@v2
        with:
          name: gcc-arm-none-eabi-ssh-amd64

      - name: Load the amd64 image
        run: podman image load -i gcc-arm-none-eabi-ssh-amd64.tar

      - name: Add the amd64 image to the manifest
        run: buildah manifest add gcc-arm-none-eabi-ssh-multiarch:latest localhost/gcc-arm-none-eabi-ssh

      - name: Push latest manifest and images to quay.io
        run: buildah manifest push --rm --all --creds jwillikers+publisher:${{ secrets.REGISTRY_PASSWORD }} gcc-arm-none-eabi-ssh-multiarch:latest docker://quay.io/jwillikers/gcc-arm-none-eabi-ssh
